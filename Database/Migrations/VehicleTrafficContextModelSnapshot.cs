// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(VehicleTrafficContext))]
    partial class VehicleTrafficContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("Database.Models.Driver", b =>
                {
                    b.Property<int>("Код_Водія")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Імя")
                        .HasColumnType("TEXT");

                    b.Property<string>("Адреса")
                        .HasColumnType("TEXT");

                    b.Property<string>("Номер_Телефону")
                        .HasColumnType("TEXT");

                    b.Property<string>("Прізвище")
                        .HasColumnType("TEXT");

                    b.HasKey("Код_Водія");

                    b.ToTable("Водії");
                });

            modelBuilder.Entity("Database.Models.Fine", b =>
                {
                    b.Property<int>("Код_Штрафу")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ВодійКод_Водія")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Опис")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Сума")
                        .HasColumnType("TEXT");

                    b.Property<int>("ТранспортКод_Транспорту")
                        .HasColumnType("INTEGER");

                    b.HasKey("Код_Штрафу");

                    b.HasIndex("ВодійКод_Водія");

                    b.HasIndex("ТранспортКод_Транспорту");

                    b.ToTable("Штрафи");
                });

            modelBuilder.Entity("Database.Models.Route", b =>
                {
                    b.Property<int>("Код_Маршруту")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Кінцева_Точка")
                        .HasColumnType("TEXT");

                    b.Property<string>("Назва")
                        .HasColumnType("TEXT");

                    b.Property<string>("Початкова_Точка")
                        .HasColumnType("TEXT");

                    b.Property<double>("Протяжність_Маршруту")
                        .HasColumnType("REAL");

                    b.HasKey("Код_Маршруту");

                    b.ToTable("Маршрути");
                });

            modelBuilder.Entity("Database.Models.Shipping", b =>
                {
                    b.Property<int>("Код_Перевезення")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ВодійКод_Водія")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Завершення")
                        .HasColumnType("TEXT");

                    b.Property<int>("МаршрутКод_Маршруту")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Початок")
                        .HasColumnType("TEXT");

                    b.Property<int>("ТранспортКод_Транспорту")
                        .HasColumnType("INTEGER");

                    b.HasKey("Код_Перевезення");

                    b.HasIndex("ВодійКод_Водія");

                    b.HasIndex("МаршрутКод_Маршруту");

                    b.HasIndex("ТранспортКод_Транспорту");

                    b.ToTable("Перевезення");
                });

            modelBuilder.Entity("Database.Models.Transport", b =>
                {
                    b.Property<int>("Код_Транспорту")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Марка")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Модель")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Код_Транспорту");

                    b.ToTable("ТрансортніЗасоби");
                });

            modelBuilder.Entity("Database.Models.Fine", b =>
                {
                    b.HasOne("Database.Models.Driver", "Водій")
                        .WithMany()
                        .HasForeignKey("ВодійКод_Водія")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Models.Transport", "Транспорт")
                        .WithMany()
                        .HasForeignKey("ТранспортКод_Транспорту")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Водій");

                    b.Navigation("Транспорт");
                });

            modelBuilder.Entity("Database.Models.Shipping", b =>
                {
                    b.HasOne("Database.Models.Driver", "Водій")
                        .WithMany()
                        .HasForeignKey("ВодійКод_Водія")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Models.Route", "Маршрут")
                        .WithMany()
                        .HasForeignKey("МаршрутКод_Маршруту")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Models.Transport", "Транспорт")
                        .WithMany()
                        .HasForeignKey("ТранспортКод_Транспорту")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Водій");

                    b.Navigation("Маршрут");

                    b.Navigation("Транспорт");
                });
#pragma warning restore 612, 618
        }
    }
}
